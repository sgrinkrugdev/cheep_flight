name: Daily Flight Watcher
on:
  schedule:
    - cron: "5 12 * * *"   # 08:00 in New York during DST (EDT = UTC-4)
  workflow_dispatch: {}     # lets you run it manually
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install -r requirements.txt
      - name: Verify code on runner
        run: |
          echo "Commit: $GITHUB_SHA"
          echo "Looking for old fromisoformat callâ€¦"
          grep -n 'fromisoformat(route\["start_date"\])' main.py || echo "Not found"
          echo "---- main.py (first 220 lines, numbered) ----"
          nl -ba main.py | sed -n '1,220p'
      - name: Verify code on runner
        run: |
          echo "Commit SHA: $GITHUB_SHA"
          echo "--- Repo root listing ---"
          ls -la
          echo "--- Search for old fromisoformat call ---"
          grep -n 'fromisoformat(route\["start_date"\])' main.py || echo "Not found"
          echo "--- First 220 lines of main.py (numbered) ---"
          nl -ba main.py | sed -n '1,220p'
      - name: Hotfix dates in main.py on runner
        run: |
          python - << 'PY'
          import re, io, sys
          p='main.py'
          s=open(p,'r',encoding='utf-8').read()
          # Replace any old direct fromisoformat calls with safe coercion
          s=re.sub(r'date\.fromisoformat\(route\["start_date"\]\)', 'date.fromisoformat(str(route["start_date"]))', s)
          s=re.sub(r'date\.fromisoformat\(route\["end_date"\]\)', 'date.fromisoformat(str(route["end_date"]))', s)
          open(p,'w',encoding='utf-8').write(s)
          print("Hotfix applied to main.py")
          PY

      - name: Verify after hotfix
        run: |
          echo "--- Search for old fromisoformat calls AFTER HOTFIX ---"
          grep -n 'fromisoformat(route\["start_date"\])' main.py || echo "Not found"
          grep -n 'fromisoformat(route\["end_date"\])' main.py   || echo "Not found"
          echo "--- Show lines 110-140 of main.py ---"
          nl -ba main.py | sed -n '110,140p'

      - name: Run watcher
        env:
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          AMADEUS_API_KEY: ${{ secrets.AMADEUS_API_KEY }}
          AMADEUS_API_SECRET: ${{ secrets.AMADEUS_API_SECRET }}
          FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
          TO_EMAIL: ${{ secrets.TO_EMAIL }}
        run: python main.py
      - name: Commit CSV (append history)
        if: always()
        run: |
          git config user.name  "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add cheapest_log.csv
          git diff --cached --quiet && echo "No CSV changes" || git commit -m "Update cheapest_log.csv [skip ci]"
          git pull --rebase
          git push

